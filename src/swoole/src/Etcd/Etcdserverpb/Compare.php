<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Etcdserverpb;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>etcdserverpb.Compare</code>
 */
class Compare extends \Google\Protobuf\Internal\Message
{
    /**
     * result is logical comparison operation for this comparison.
     *
     * Generated from protobuf field <code>.etcdserverpb.Compare.CompareResult result = 1;</code>
     */
    private $result = 0;
    /**
     * target is the key-value field to inspect for the comparison.
     *
     * Generated from protobuf field <code>.etcdserverpb.Compare.CompareTarget target = 2;</code>
     */
    private $target = 0;
    /**
     * key is the subject key for the comparison operation.
     *
     * Generated from protobuf field <code>bytes key = 3;</code>
     */
    private $key = '';
    /**
     * range_end compares the given target to all keys in the range [key, range_end).
     * See RangeRequest for more details on key ranges.
     *
     * Generated from protobuf field <code>bytes range_end = 64;</code>
     */
    private $range_end = '';
    protected $target_union;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $result
     *           result is logical comparison operation for this comparison.
     *     @type int $target
     *           target is the key-value field to inspect for the comparison.
     *     @type string $key
     *           key is the subject key for the comparison operation.
     *     @type int|string $version
     *           version is the version of the given key
     *     @type int|string $create_revision
     *           create_revision is the creation revision of the given key
     *     @type int|string $mod_revision
     *           mod_revision is the last modified revision of the given key.
     *     @type string $value
     *           value is the value of the given key, in bytes.
     *     @type int|string $lease
     *           lease is the lease id of the given key.
     *     @type string $range_end
     *           range_end compares the given target to all keys in the range [key, range_end).
     *           See RangeRequest for more details on key ranges.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct($data);
    }

    /**
     * result is logical comparison operation for this comparison.
     *
     * Generated from protobuf field <code>.etcdserverpb.Compare.CompareResult result = 1;</code>
     * @return int
     */
    public function getResult()
    {
        return $this->result;
    }

    /**
     * result is logical comparison operation for this comparison.
     *
     * Generated from protobuf field <code>.etcdserverpb.Compare.CompareResult result = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setResult($var)
    {
        GPBUtil::checkEnum($var, \Etcdserverpb\Compare_CompareResult::class);
        $this->result = $var;

        return $this;
    }

    /**
     * target is the key-value field to inspect for the comparison.
     *
     * Generated from protobuf field <code>.etcdserverpb.Compare.CompareTarget target = 2;</code>
     * @return int
     */
    public function getTarget()
    {
        return $this->target;
    }

    /**
     * target is the key-value field to inspect for the comparison.
     *
     * Generated from protobuf field <code>.etcdserverpb.Compare.CompareTarget target = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTarget($var)
    {
        GPBUtil::checkEnum($var, \Etcdserverpb\Compare_CompareTarget::class);
        $this->target = $var;

        return $this;
    }

    /**
     * key is the subject key for the comparison operation.
     *
     * Generated from protobuf field <code>bytes key = 3;</code>
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     * key is the subject key for the comparison operation.
     *
     * Generated from protobuf field <code>bytes key = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->key = $var;

        return $this;
    }

    /**
     * version is the version of the given key
     *
     * Generated from protobuf field <code>int64 version = 4;</code>
     * @return int|string
     */
    public function getVersion()
    {
        return $this->readOneof(4);
    }

    /**
     * version is the version of the given key
     *
     * Generated from protobuf field <code>int64 version = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkInt64($var);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * create_revision is the creation revision of the given key
     *
     * Generated from protobuf field <code>int64 create_revision = 5;</code>
     * @return int|string
     */
    public function getCreateRevision()
    {
        return $this->readOneof(5);
    }

    /**
     * create_revision is the creation revision of the given key
     *
     * Generated from protobuf field <code>int64 create_revision = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCreateRevision($var)
    {
        GPBUtil::checkInt64($var);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * mod_revision is the last modified revision of the given key.
     *
     * Generated from protobuf field <code>int64 mod_revision = 6;</code>
     * @return int|string
     */
    public function getModRevision()
    {
        return $this->readOneof(6);
    }

    /**
     * mod_revision is the last modified revision of the given key.
     *
     * Generated from protobuf field <code>int64 mod_revision = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setModRevision($var)
    {
        GPBUtil::checkInt64($var);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * value is the value of the given key, in bytes.
     *
     * Generated from protobuf field <code>bytes value = 7;</code>
     * @return string
     */
    public function getValue()
    {
        return $this->readOneof(7);
    }

    /**
     * value is the value of the given key, in bytes.
     *
     * Generated from protobuf field <code>bytes value = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkString($var, False);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * lease is the lease id of the given key.
     *
     * Generated from protobuf field <code>int64 lease = 8;</code>
     * @return int|string
     */
    public function getLease()
    {
        return $this->readOneof(8);
    }

    /**
     * lease is the lease id of the given key.
     *
     * Generated from protobuf field <code>int64 lease = 8;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLease($var)
    {
        GPBUtil::checkInt64($var);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * range_end compares the given target to all keys in the range [key, range_end).
     * See RangeRequest for more details on key ranges.
     *
     * Generated from protobuf field <code>bytes range_end = 64;</code>
     * @return string
     */
    public function getRangeEnd()
    {
        return $this->range_end;
    }

    /**
     * range_end compares the given target to all keys in the range [key, range_end).
     * See RangeRequest for more details on key ranges.
     *
     * Generated from protobuf field <code>bytes range_end = 64;</code>
     * @param string $var
     * @return $this
     */
    public function setRangeEnd($var)
    {
        GPBUtil::checkString($var, False);
        $this->range_end = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getTargetUnion()
    {
        return $this->whichOneof("target_union");
    }

}

